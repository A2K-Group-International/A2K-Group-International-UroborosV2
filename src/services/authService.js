import { supabase } from "./supabaseClient"; // Supabase client import

// Register user
const registerUser = async ({
  firstName,
  lastName,
  email,
  password,
  contactNumber,
}) => {
  try {
    const { data: user, error: signUpError } = await supabase.auth.signUp({
      email,
      password,
    });

    console.log("User after signUp:", user);

    if (signUpError) throw signUpError;

    // Insert user details into the 'users' table
    const { error: insertError } = await supabase.from("users").insert([
      {
        id: user.user.id, // UUID generated by Supabase Auth
        email: user.user.email,
        name: `${firstName} ${lastName}`,
        contact_number: contactNumber,
        role: "parishioner", // Set role as needed
        is_confirmed: false,
        is_active: true,
      },
    ]);

    if (insertError) throw insertError;

    // Ensure returning the user object after successful insert
    console.log("User after insert:", user);
    return user; // Explicitly return the user object
  } catch (error) {
    console.error("Error during sign-up:", error);
    throw error; // Re-throw the error so that it can be handled by the calling function
  }
};

export { registerUser };
