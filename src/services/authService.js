import { supabase } from "./supabaseClient"; // Supabase client import

// Register user
const registerUser = async ({
  firstName,
  lastName,
  email,
  password,
  contactNumber,
  role = "parishioner",
}) => {
  try {
    // Sign up the user via Supabase Auth
    const { data: user, error: signUpError } = await supabase.auth.signUp({
      email,
      password,
    });

    if (signUpError) throw signUpError;

    // Insert user details into the 'users' table
    const { error: insertError } = await supabase.from("users").insert([
      {
        id: user.user.id, // UUID generated by Supabase Auth
        email: user.user.email,
        first_name: firstName,
        last_name: lastName,
        contact_number: contactNumber,
        role, // Set role as needed
        is_confirmed: false,
      },
    ]);

    if (insertError) throw insertError;

    // Insert the user data into the 'parents' table
    const { error: parentsInsertError } = await supabase
      .from("parents")
      .insert([
        {
          parishioner_id: user.user.id, // UUID generated by Supabase Auth
          first_name: firstName,
          last_name: lastName,
          contact_number: contactNumber,
        },
      ]);

    if (parentsInsertError) throw parentsInsertError;

    return user; // Return the user object after successful insertions
  } catch (error) {
    console.error("Error during sign-up:", error);
    throw error; // Re-throw the error to be handled by the calling function
  }
};

export { registerUser };
